## Description

### Notation

Notation used here corresponds to notation of ANTLR 4 with a few exceptions for convenience of reading:
- omitted lexer rule actions and commands,
- omitted lexical modes.

Description of rules notation can be found in [ANTLR 4 repository](https://github.com/antlr/antlr4/blob/master/doc/){:target="_blank"}.

### Grammar files

Kotlin grammar files in ANTLR format are in [Kotlin specification repository](https://github.com/JetBrains/kotlin-spec/tree/spec-rework){:target="_blank"}:
- **[LexerGrammar.g4](https://github.com/JetBrains/kotlin-spec/blob/spec-rework/src/grammar/KotlinLexer.g4){:target="_blank"}** describes [lexical structure](#lexical-structure);
- **[UnicodeClasses.g4](https://github.com/JetBrains/kotlin-spec/blob/spec-rework/src/grammar/UnicodeClasses.g4){:target="_blank"}** describes the characters that can be used in identifiers (these rules are omitted on this page for convenience of reading);
- **[ParserGrammar.g4](https://github.com/JetBrains/kotlin-spec/blob/spec-rework/src/grammar/KotlinParser.g4){:target="_blank"}** describes [syntax](#syntax).

Grammar on this page corresponds to grammar in files above (generated by it).

### Symbols and naming

_Terminal symbol_ names start with an uppercase letter, e.g. [Identifier](#Identifier).<br>
_Non-terminal symbol_ names start with a lowercase letter, e.g. [kotlinFile](#kotlinFile).<br>

Symbol definitions may be prepended with _attributes_:
- `start` attribute denotes a start symbol (see [kotlinFile](#kotlinFile) and [script](#script)),
- `helper` attribute denotes a lexer fragment rule (used only inside other terminal symbols).

Also for convenience of reading some simplifications are made:
- lexer rules consisting of one string literal element is inlined to the place of use,
- new lines (`NL` token) are excluded,
- semicolons (`semi` and `semis` token) are excluded.

New lines and semicolons have some nuances (see source grammar files for details).